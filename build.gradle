allprojects {
	repositories {
	  	jcenter()
	  }
  
	//Plugins applyen
	apply plugin:'java'
	apply plugin:'eclipse'
	//Decoding
	compileJava.options.encoding = 'UTF-8'
	
	tasks.withType(JavaCompile) {
	    options.encoding = 'UTF-8'
	}
}

apply plugin: 'application'
mainClassName = 'de.ugoe.cs.smartshark.mutaSHARK.MutaShark'
	
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.21'
    compile "commons-cli:commons-cli:1.4"
    compile "ch.qos.logback:logback-classic:1.2.3"

    // Smartshark Data-Models 
    compile 'io.github.smartshark:jSHARK:2.0.3'
    compile 'org.mongodb.morphia:morphia:1.3.2'

    compile group: 'com.github.gumtreediff', name: 'gumtree-all', version: '2.0.0'

// https://mvnrepository.com/artifact/com.github.gumtreediff/gen.javaparser
    compile group: 'com.github.gumtreediff', name: 'gen.javaparser', version: '2.1.2'







    testCompile 'junit:junit:4.12'
}

//Projektversion wird Ã¼ber die gradle.properties gesetzt
if (project.hasProperty('projectVersion')) {
  project.version = project.projectVersion
} else {
  project.version = findProperty('projectVersion')
}

//create a single Jar with all dependencies
task fatJar(type: Jar) {
	//noinspection GroovyAssignabilityCheck
    manifest {
        attributes 'Implementation-Title': 'SmartSHARK MutaShark',
        	'Implementation-Version': 1,
        	'Main-Class': 'de.ugoe.cs.smartshark.mutaSHARK.MutaShark'
    }
    baseName = project.name + '-all'
    //noinspection GroovyAssignabilityCheck
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}
